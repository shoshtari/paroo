package main

//
// import (
// 	"math/rand"
// 	"os"
// 	"time"
//
// 	"github.com/go-echarts/go-echarts/v2/charts"
// 	"github.com/go-echarts/go-echarts/v2/opts"
// )
//
// // generate random data for bar chart
// func generateBarItems() []opts.BarData {
// 	items := make([]opts.BarData, 0)
// 	for i := 0; i < 7; i++ {
// 		items = append(items, opts.BarData{Value: rand.Intn(300)})
// 	}
// 	return items
// }
//
// func main() {
// 	// create a new bar instance
// 	bar := charts.NewBar()
// 	// set some global options like Title/Legend/ToolTip or anything else
// 	bar.SetGlobalOptions(
//
// 		charts.WithAnimation(false),
// 		charts.WithTitleOpts(opts.Title{
// 			Title:    "My first bar chart generated by go-echarts",
// 			Subtitle: "It's extremely easy to use, right?",
// 		}))
//
// 	var x []time.Time
// 	for i := range 7 {
// 		x = append(x, time.Now().Add(-time.Hour*time.Duration(i)))
// 	}
//
// 	bar.SetXAxis(x).
// 		AddSeries("Category A", generateBarItems()).
// 		AddSeries("Category B", generateBarItems())
// 	// Where the magic happens
// 	f, _ := os.Create("bar.html")
// 	bar.Render(f)
// }
