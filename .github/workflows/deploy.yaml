on:
  workflow_run:
    workflows: ["build"]
    branches: [main]
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-22.04
    environment: production

    permissions:
      contents: read
      packages: write

    steps:

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0


      - name: set tag
        run: |
          old_tag=dev$(git log --oneline | head -n 1 | cut -d " " -f 1)
          new_tag=$(git tag | sort -V | tail -n 1 )
          echo "old_tag=$old_tag" >> $GITHUB_ENV
          echo "new_tag=$new_tag" >> $GITHUB_ENV

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Repush Docker Image
        run: |
          image_name="ghcr.io/${{ github.repository }}"
          docker pull $image_name:${{ env.old_tag }}
          docker tag $image_name:${{ env.old_tag }} $image_name:${{ env.new_tag }}
          docker tag $image_name:${{ env.old_tag }} $image_name:latest
          docker push $image_name:${{ env.new_tag }}
          docker push $image_name

      - name: deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USER }}
          key: ${{ secrets.PROD_KEY }}
          port: ${{ secrets.PROD_PORT }}
          script: |
            set -e
            set +x
            cd /opt/morteza_procs
            repository=$( echo ${{ github.repository }} | cut -d '/' -f 2 )
            if [ ! -d $repository ]; then
              echo "You should have cloned it first manually"
              exit 1
            fi
            cd "$repository/deploy"
            git pull
            docker compose -f compose.yaml up -d
